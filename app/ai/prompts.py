RESUME_PARSER_PROMPT = (
        'CONTEXT: You are a resume parsing AI. Your task is to convert unstructured CV text into a structured JSON object.\n\n'
        'QUERY: Carefully analyze the provided CV text and extract the following fields:\n'
        '- name: The full name of the candidate.\n'
        '- email: The primary email address.\n'
        '- phone: The primary phone number.\n'
        '- summary: A brief professional summary.\n'
        '- skills: A list of key professional, technical, and soft skills.\n'
        '- work_experience: A list of professional employment roles. Each item must be a formal job with a specific company, position/role, and employment duration. Do not include personal projects here.\n'
        '- projects: A list of personal, academic, or freelance projects that are not formal employment. Include the project name, a brief description, team size, and time of the project.\n'
        '- education: A list of educational qualifications, each with "degree", "institution", and "year".\n'
        '- certifications: A list of professional qualifications obtained by passing an exam (e.g., "AWS Certified Developer").\n'
        '- awards: A list of honors, recognitions of excellence, or competitive prizes (e.g., "1st Prize", "Silver Medal",...). Each item must have a "name". This is distinct from a certification.\n'
        '- languages: A list of languages spoken.\n'
        '- location: The candidate\'s general location (e.g., "Hanoi, Vietnam").\n\n'
        'Return a single JSON object with the key "parsed_resume". The value should be an object containing the extracted fields. '
        'Ensure all field types match the specified schema. If a field is not found, use an appropriate empty value (e.g., "" for strings, [] for lists).\n\n'
        'INPUT: The extracted CV text is below.\n'
        '```text\n'
        '{documents}\n'
        '```\n\n'
        'EXAMPLE OUTPUT:\n'
        '{{\n'
        '    "parsed_resume": {{\n'
        '        "name": "John Doe",\n'
        '        "email": "john.doe@example.com",\n'
        '        "phone": "+1 555-123-4567",\n'
        '        "summary": "Senior backend engineer with 6 years of experience building APIs in Python.",\n'
        '        "skills": ["Python", "FastAPI", "PostgreSQL", "Docker", "AWS"],\n'
        '        "work_experience": [\n'
        '            {{"company": "Microsoft", "position": "Senior Backend Engineer", "duration": "2019-2024"}}\n'
        '        ],\n'
        '        "projects": [\n'
        '            {{"name": "CV Analysis API", "description": "Developed a FastAPI backend to parse resumes.", "team_size": 1, "time_of_project": "Q1 2024"}}\n'
        '        ],\n'
        '        "education": [\n'
        '            {{"degree": "BSc Computer Science", "institution": "State University", "year": "2017"}}\n'
        '        ],\n'
        '        "certifications": ["AWS Certified Developer"],\n'
        '        "awards": [\n'
        '            {{"name": "IOI Gold Medal"}}\n'
        '        ],\n'
        '        "languages": ["English", "Spanish"],\n'
        '        "location": "Hanoi, Vietnam"\n'
        '    }}\n'
        '}}\n'
        'OUTPUT JSON SCHEMA:\n'
        'Now, perform the analysis on the `INPUT DATA` provided above. Your response must be formatted exactly like this JSON structure. Do not deviate.\n'
        '{{\n'
        '    "parsed_resume": {{\n'
        '        "name": "",\n'
        '        "email": "",\n'
        '        "phone": "",\n'
        '        "summary": "",\n'
        '        "skills": [],\n'
        '        "work_experience": [],\n'
        '        "projects": [],\n'
        '        "education": [],\n'
        '        "certifications": [],\n'
        '        "awards": [],\n'
        '        "languages": [],\n'
        '        "location": ""\n'
        '    }}\n'
        '}}\n'
)


CV_REVIEWER_PROMPT = (
            'CONTEXT: You are an expert hiring manager and career coach with 15+ years of experience across multiple industries. Your task is to conduct a professional evaluation of a CV and provide a structured JSON review.\n\n'
            'INSTRUCTIONS:\n'
            '1. First, silently evaluate the CV against the following core criteria:\n'
            '   - Clarity & Presentation: Is the CV easy to read, well-formatted, and free of typos?\n'
            '   - Impact & Achievements: Does the candidate use quantifiable data (numbers, percentages, metrics) to demonstrate their impact, or just list duties?\n'
            '   - Relevance & Experience: Is the work experience relevant and does it show a clear progression or growth?\n'
            '2. Based on your evaluation, populate the following fields:\n'
            '   - strengths: Identify clear, compelling positive aspects. Focus on quantifiable achievements, relevant experience, and strong skillsets.\n'
            '   - weaknesses: Pinpoint areas for improvement. Note any lack of detail, missing key skills, or unclear career progression.\n'
            '   - suggestions: Offer concrete, actionable advice for the candidate to improve their CV. For example, "Quantify project impact with metrics."\n'
            '3. Assign an overall `score` from 1.0 to 10.0 reflecting the CV\'s overall quality.\n\n'
            'INPUT: The extracted CV text is below.\n'
            '```text\n'
            '{documents}\n'
            '```\n\n'
            'OUTPUT FORMAT: Return only the JSON object, with no additional commentary.\n\n'
            'EXAMPLE OUTPUT:\n'
            '{{\n'
            '    "review": {{\n'
            '        "score": 7.5,\n'
            '        "strengths": ["Excellent use of quantifiable metrics to show impact (e.g., \'increased lead generation by 25%\').", "The CV is well-structured and easy to read."],\n'
            '        "weaknesses": ["The professional summary is generic and lacks a clear career objective.", "While experience is listed, it doesn\'t clearly show career progression from one role to the next."],\n'
            '        "suggestions": ["Tailor the summary to the specific type of job being applied for to show clear intent.", "Consider adding a short sentence to each role explaining how it built upon the previous one."]\n'
            '    }}\n'
            '}}\n'
            'OUTPUT JSON SCHEMA:\n'
            'Now, perform the analysis on the `INPUT DATA` provided above. Your response must be formatted exactly like this JSON structure. Do not deviate.\n'
            '{{\n'
            '    "review": {{\n'
            '        "score": 0.0,\n'
            '        "strengths": [],\n'
            '        "weaknesses": [],\n'
            '        "suggestions": []\n'
            '    }}\n'
            '}}\n'
        )

INTERVIEW_QUESTION_PROMPT = (
            'CONTEXT: You are a senior professional and expert interviewer in the candidate\'s field. Your task is to generate insightful interview questions based on the candidate\'s CV.\n\n'
            'INSTRUCTIONS: Create questions that directly probe the experience and skills listed in the CV. Group them by topic and assign a difficulty.\n\n'
            'INPUT: The extracted CV text is below.\n'
            '```text\n'
            '{documents}\n'
            '```\n\n'
            'OUTPUT FORMAT: Return only the JSON object, with no additional commentary.\n\n'
            'EXAMPLE OUTPUT:\n'
            '{{\n'
            '    "interviewQuestions": [\n'
            '        {{\n'
            '            "topic": "Java & Spring Boot Experience",\n'
            '            "topic_en": "java_spring_boot_experience",\n'
            '            "questions": [\n'
            '                {{"question": "In your \'Business Directory API\' project, what was the most challenging Spring Boot feature you implemented and why?", "difficulty": "medium"}},\n'
            '                {{"question": "You list Kafka as a skill. How would you integrate Kafka into a Spring Boot microservice to handle asynchronous tasks?", "difficulty": "hard"}}\n'
            '            ]\n'
            '        }},\n'
            '        {{\n'
            '            "topic": "Problem Solving",\n'
            '            "topic_en": "problem_solving",\n'
            '            "questions": [\n'
            '                {{"question": "Describe the algorithm you used for your \'File Compressor\' project. What were its time and space complexities?", "difficulty": "hard"}}\n'
            '            ]\n'
            '        }}\n'
            '    ]\n'
            '}}\n'
            'OUTPUT JSON SCHEMA:\n'
            'Now, perform the analysis on the `INPUT DATA` provided above. Your response must be formatted exactly like this JSON structure. Do not deviate.\n'
            '{{\n'
            '    "interviewQuestions": []\n'
            '}}\n'
        )