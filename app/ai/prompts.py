RESUME_PARSER_PROMPT = (
        'CONTEXT: You are a resume parsing AI. Your task is to convert unstructured CV text into a structured JSON object.\n\n'
        'QUERY: Carefully analyze the provided CV text and extract the following fields. If a field is not found, leave the corresponding value as an appropriate empty type (e.g., "" for strings, [] for lists).\n'
        '**Language Rule:** ALWAYS preserve the **original language** of the CV. Do NOT translate or alter field values â€” store them exactly as they appear in the CV.\n\n'
        'Extract the following fields:\n'
        '- name: The full name of the candidate. If not found, leave as "".\n'
        '- email: The primary email address. If not found, leave as "".\n'
        '- phone: The primary phone number. If not found, leave as "".\n'
        '- summary: A brief professional summary. If not found, leave as "".\n'
        '- skills: A list of key professional, technical, and soft skills. If not found, leave as [].\n'
        '- work_experience: A list of professional employment roles. Each item must be a formal job with a specific company, position/role, employment duration, and a concise **role_description** of their responsibilities. Do not include personal projects here. If not found, leave as [].\n'
        '- projects: A list of personal, academic, or freelance projects that are not formal employment. Include the "project\'s name)", a brief "description", and "time of the project". If not found, leave as [].\n'
        '- education: A list of educational qualifications, each with "degree", "institution", and "year". If not found, leave as [].\n'
        '- certifications: A list of professional qualifications obtained by passing an exam (e.g., "AWS Certified Developer"). Each item must have a "name". If not found, leave as [].\n'
        '- awards: A list of honors, recognitions of excellence, or competitive prizes (e.g., "1st Prize", "Silver Medal",...). Each item must have a "name". This is distinct from a certification. If not found, leave as [].\n'
        '- languages: A list of languages spoken. If not found, leave as [].\n'
        '- location: The candidate\'s general location (e.g., "Hanoi, Vietnam"). If not found, leave as "".\n\n'
        'Return a single JSON object with the key "parsed_resume". The value should be an object containing the extracted fields. '
        'Ensure all field types match the specified schema.\n\n'
        'INPUT: The extracted CV text is below.\n'
        '```text\n'
        '{documents}\n'
        '```\n\n'
        'EXAMPLE OUTPUT:\n'
        '{{\n'
        '    "parsed_resume": {{\n'
        '        "name": "John Doe",\n'
        '        "email": "john.doe@example.com",\n'
        '        "phone": "+1 555-123-4567",\n'
        '        "summary": "Senior backend engineer with 6 years of experience building APIs in Python.",\n'
        '        "skills": ["Python", "FastAPI", "PostgreSQL", "Docker", "AWS"],\n'
        '        "work_experience": [\n'
        '            {{"company": "Microsoft", "position": "Senior Backend Engineer", "duration": "2019-2024", "role_description": "Developed and maintained highly scalable APIs for enterprise applications using Python and FastAPI. Implemented a robust testing framework and managed CI/CD pipelines on AWS."}}\n'
        '        ],\n'
        '        "projects": [\n'
        '            {{"name": "CV Analysis System", "description": "Developed a FastAPI backend to parse resumes.", "time_of_project": "Q1 2024"}}\n'
        '            {{"name": "Customer Relationship Application", "description": "Designed and implemented a full-stack web application to manage client interactions and sales pipelines.", "time_of_project": "2023-2024"}}\n'
        '        ],\n'
        '        "education": [\n'
        '            {{"degree": "BSc Computer Science", "institution": "State University", "year": "2017"}}\n'
        '        ],\n'
        '        "certifications": [\n'
        '            {{"name": "AWS Certified Developer"}}\n'
        '        ],\n'
        '        "awards": [\n'
        '            {{"name": "IOI Gold Medal"}}\n'
        '        ],\n'
        '        "languages": ["English", "Spanish"],\n'
        '        "location": "Hanoi, Vietnam"\n'
        '    }}\n'
        '}}\n'
        'OUTPUT JSON SCHEMA:\n'
        'Now, perform the analysis on the `INPUT DATA` provided above. Your response must be formatted exactly like this JSON structure. Do not deviate.\n'
        '{{\n'
        '    "parsed_resume": {{\n'
        '        "name": "",\n'
        '        "email": "",\n'
        '        "phone": "",\n'
        '        "summary": "",\n'
        '        "skills": [],\n'
        '        "work_experience": [],\n'
        '        "projects": [],\n'
        '        "education": [],\n'
        '        "certifications": [],\n'
        '        "awards": [],\n'
        '        "languages": [],\n'
        '        "location": ""\n'
        '    }}\n'
        '}}\n'
)

DESIGN_REVIEWER_PROMPT = (
    'CONTEXT: You are an expert UI/UX Designer and Graphic Design consultant with a keen eye for professional document layout. Your goal is to analyze the provided CV image and provide a structured, objective design review.\n\n'
    'INSTRUCTIONS:\n'
    '**Language Rule:** You MUST write the review in the **same language as the CV text** appears to be in. If you cannot determine the language, default to English.\n\n'
    'Analyze the CV image based on the following professional design criteria. For each criterion, provide a score from 1-5 and a brief justification.\n\n'
    '1.  **Color & Contrast:** Is the color palette professional and limited (2-3 colors)? Is there sufficient contrast between the text and background for readability?\n'
    '2.  **Typography & Hierarchy:** Is the font choice professional and easy to read? Is a clear visual hierarchy used (e.g., larger/bolder headings, consistent font sizes for body text)?\n'
    '3.  **Layout & Whitespace:** Is the layout logical and easy to follow (e.g., clear columns, sections)? Is there enough whitespace (margins, spacing) to avoid a cramped feeling?\n\n'
    'After evaluating all criteria, provide a final summary with an overall score, key strengths, and actionable suggestions.\n\n'
    'OUTPUT JSON SCHEMA: Your entire response MUST be a single, valid JSON object. Adhere strictly to this schema:\n'
    '{{\n'
    '  "design_review": {{\n'
    '    "criteria": {{\n'
    '      "color_and_contrast": {{"score": 0, "justification": ""}},\n'
    '      "typography_and_hierarchy": {{"score": 0, "justification": ""}},\n'
    '      "layout_and_whitespace": {{"score": 0, "justification": ""}}\n'
    '    }},\n'
    '    "summary": {{\n'
    '      "overall_score": 0.0,\n'
    '      "strengths": [],\n'
    '      "suggestions": []\n'
    '    }}\n'
    '  }}\n'
    '}}\n'
)


CV_REVIEWER_PROMPT = (
        'CONTEXT: You are an expert hiring manager and career coach with 15+ years of experience across multiple industries. Your task is to conduct a professional evaluation of a CV and provide a structured JSON review.\n\n'
        'INSTRUCTIONS:\n'
        '1.  **Language Rule:** You MUST write the review in the **same language as the CV**. Detect the CV\'s language from the provided text and respond entirely in that language.\n'
        '2.  First, silently evaluate the CV against the following core criteria:\n'
        '    - Clarity & Presentation: Is the CV easy to read, well-formatted, and free of typos?\n'
        '    - Impact & Achievements: Does the candidate use quantifiable data (numbers, percentages, metrics) to demonstrate their impact, or just list duties?\n'
        '    - Relevance & Experience: Is the work experience relevant and does it show a clear progression or growth?\n'
        '3.  Based on your evaluation, populate the following fields:\n'
        '    - strengths: Identify clear, compelling positive aspects. Focus on quantifiable achievements, relevant experience, and strong skillsets.\n'
        '    - weaknesses: Pinpoint areas for improvement. Note any lack of detail, missing key skills, or unclear career progression. If an important section (e.g., Projects, Summary) is missing, state that either the CV does not include the field or its formatting/color contrast makes it difficult to read.\n'
        '    - suggestions: Offer concrete, actionable advice for the candidate to improve their CV. For example, "Quantify project impact with metrics."\n'
        '4.  Assign an overall `score` from 1.0 to 10.0 reflecting the CV\'s overall quality.\n'
        '5.  Your final output MUST be a single, valid JSON object that strictly follows the schema provided. Do not add any text, explanations, or any characters before or after the JSON object.\n\n'
        'INPUT: The extracted CV text is below.\n'
        '```text\n'
        '{documents}\n'
        '```\n\n'
        'EXAMPLE OUTPUT:\n'
        '{{\n'
        '    "review": {{\n'
        '        "score": 7.5,\n'
        '        "strengths": ["Excellent use of quantifiable metrics to show impact (e.g., \'increased lead generation by 25%\').", "The CV is well-structured and easy to read."],\n'
        '        "weaknesses": ["The professional summary is generic and lacks a clear career objective.", "The CV does not seem to include a Projects section, which makes it hard to gauge practical application of skills."],\n'
        '        "suggestions": ["Tailor the summary to the specific type of job being applied for to show clear intent.", "Consider adding a short sentence to each role explaining how it built upon the previous one."]\n'
        '    }}\n'
        '}}\n\n'
        'OUTPUT JSON SCHEMA:\n'
        'Now, perform the analysis on the `INPUT DATA` provided above. Your response must be formatted exactly like this JSON structure. Do not deviate.\n'
        '{{\n'
        '    "review": {{\n'
        '        "score": 0.0,\n'
        '        "strengths": [],\n'
        '        "weaknesses": [],\n'
        '        "suggestions": []\n'
        '    }}\n'
        '}}\n'
)

INTERVIEW_QUESTION_PROMPT = (
            'CONTEXT: You are a senior professional and expert interviewer in the candidate\'s field. Your task is to generate insightful interview questions based on the candidate\'s CV.\n\n'
            'INSTRUCTIONS: '
            '1.  **Language Rule:** The questions MUST be written in the **same language as the CV text**. For example, if the CV is in Vietnamese, generate questions in Vietnamese. Do NOT translate.\n'
            '2. Analyze the CV text to understand their experience, skills, and projects.\n'            
            '3. Generate a total of approximately 20 relevant and specific interview questions to their skills, projects and work experience.\n'
            '4. Ensure the questions\' **difficulty level is proportional to the candidate\'s experience**. If the candidate is a senior professional, ask questions that challenge them at a senior level (e.g., about system design, tradeoffs, and mentorship). If they are a junior, focus on fundamentals.\n'  
            '5. Group the questions into the following topics:\n'
            '   - Behavioral Questions: Probes for past experiences and how the candidate handled them.\n'
            '   - Experience-Specific Questions: Asks for details about specific roles, companies, or projects listed in the CV.\n'
            '   - Technical & Probing Questions: Tests the candidate\'s understanding of technologies, algorithms, and concepts they claim to know.\n'
            '6. For each question, assign a difficulty level: "easy", "medium", or "hard".\n\n'
            'INPUT: The extracted CV text is below.\n'
            '```text\n'
            '{documents}\n'
            '```\n\n'
            'OUTPUT FORMAT: Return only the JSON object, with no additional commentary.\n\n'
            'EXAMPLE OUTPUT:\n'
            '{{\n'
            '    "interviewQuestions": [\n'
            '        {{\n'
            '            "topic": "Behavioral Questions",\n'
            '            "topic_en": "behavioral_questions",\n'
            '            "questions": [\n'
            '                {{"question": "Tell me about a time you had a technical disagreement with a teammate. How did you resolve it?", "difficulty": "medium"}},\n'
            '                {{"question": "Describe a project you worked on where the requirements changed unexpectedly. How did you adapt?", "difficulty": "medium"}}\n'
            '            ]\n'
            '        }},\n'
            '        {{\n'
            '            "topic": "Technical & Probing Questions",\n'
            '            "topic_en": "technical_probing_questions",\n'
            '            "questions": [\n'
            '                {{"question": "Describe the algorithm you used for your \'File Compressor\' project. What were its time and space complexities?", "difficulty": "hard"}}\n'
            '            ]\n'
            '        }}\n'
            '    ]\n'
            '}}\n'
            'OUTPUT JSON SCHEMA:\n'
            'Now, perform the analysis on the `INPUT DATA` provided above. Your response must be formatted exactly like this JSON structure. Do not deviate.\n'
            '{{\n'
            '    "interviewQuestions": []\n'
            '}}\n'
        )